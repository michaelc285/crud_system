/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.empsystem.ui.panel.manager;



import com.empsystem.entity.PanelStore;
import com.empsystem.entity.Project;
import com.empsystem.ui.BasePanel;
import com.empsystem.entity.SearchSelection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Objects;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static com.empsystem.ui.PanelConstant.MANAGER_MAIN;




/**
 *
 * @author Michael
 */
public class EditProjectPanelUI extends BasePanel {
    private Integer selectedTaskID;
    /**
     * Creates new form EditProjectPanelUI
     * @param ps
     */
    public EditProjectPanelUI(PanelStore ps) {
       super(ps);
    }

    @Override
    public void setupPage() {
        deptartmentMemberTable.setAutoCreateRowSorter(true);
        refreshDeptMemberTable();
        refreshTable();
        cleanEditProjectPanelField();
        cleanEditTaskPanelField();
        hideProjectPanelLabel();
        jTabbedPane1.setSelectedIndex(0);
    }
    
    @Override
    public void init() {
        initComponents();   
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        projectNameText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        projectDescriptionText = new javax.swing.JTextPane();
        projectStartDateChooser = new com.toedter.calendar.JDateChooser();
        createProjectButton = new javax.swing.JButton();
        projectEndDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        projectTextFieldClearButton = new javax.swing.JButton();
        deleteProjectButton = new javax.swing.JButton();
        editProjectButton = new javax.swing.JButton();
        warningLabel1 = new javax.swing.JLabel();
        warningLabel2 = new javax.swing.JLabel();
        warningLabel3 = new javax.swing.JLabel();
        refreshProjectButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        projectTable = new javax.swing.JTable();
        projectSearchComboBox = new javax.swing.JComboBox<>();
        searchProjectTextField = new javax.swing.JTextField();
        projectSearchButton = new javax.swing.JButton();
        refreshButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        taskEditorPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        projectComboBox = new javax.swing.JComboBox<>();
        addTaskButton = new javax.swing.JButton();
        removeTaskButton = new javax.swing.JButton();
        updateTaskButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskDescriptionTextPane = new javax.swing.JTextPane();
        employeeTextField = new javax.swing.JTextField();
        refreshTaskTableButton = new javax.swing.JButton();
        clearTaskTextFieldButton = new javax.swing.JButton();
        departmentMemberPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        deptartmentMemberTable = new javax.swing.JTable();
        deptMemberSearchComboBox = new javax.swing.JComboBox<>();
        searchDepartmentTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        projectMembersPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        taskMembersTable = new javax.swing.JTable();
        returnButton2 = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setMaximumSize(new java.awt.Dimension(1184, 537));
        setMinimumSize(new java.awt.Dimension(1184, 537));
        setPreferredSize(new java.awt.Dimension(1184, 537));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1184, 537));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1184, 537));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1184, 537));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Project Editor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Project Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("End Date");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Description");

        projectNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectNameTextActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(projectDescriptionText);

        projectStartDateChooser.setDateFormatString("yyyy-MM-dd");
        projectStartDateChooser.setMaxSelectableDate(new java.util.Date(253370739714000L));

        createProjectButton.setText("Create");
        createProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createProjectButtonMouseClicked(evt);
            }
        });
        createProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProjectButtonActionPerformed(evt);
            }
        });

        projectEndDateChooser.setDateFormatString("yyyy-MM-dd");
        projectEndDateChooser.setMaxSelectableDate(new java.util.Date(253370739714000L));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Start Date");

        projectTextFieldClearButton.setText("Clear");
        projectTextFieldClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectTextFieldClearButtonActionPerformed(evt);
            }
        });

        deleteProjectButton.setText("Delete");
        deleteProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteProjectButtonMouseClicked(evt);
            }
        });
        deleteProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProjectButtonActionPerformed(evt);
            }
        });

        editProjectButton.setText("Edit");
        editProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editProjectButtonMouseClicked(evt);
            }
        });
        editProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProjectButtonActionPerformed(evt);
            }
        });

        warningLabel1.setForeground(new java.awt.Color(255, 102, 102));
        warningLabel1.setText("Warning Label");

        warningLabel2.setForeground(new java.awt.Color(255, 102, 102));
        warningLabel2.setText("Warning Label");

        warningLabel3.setForeground(new java.awt.Color(255, 102, 102));
        warningLabel3.setText("Warning Label");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(354, 354, 354))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel2))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(createProjectButton)
                                                .addGap(2, 2, 2)
                                                .addComponent(editProjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(deleteProjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(139, 139, 139)
                                                .addComponent(projectTextFieldClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(projectEndDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(projectStartDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(projectNameText)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(warningLabel2)
                                                    .addComponent(warningLabel1))
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(warningLabel3)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(270, 270, 270))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(projectNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectStartDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(projectEndDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createProjectButton)
                    .addComponent(editProjectButton)
                    .addComponent(deleteProjectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projectTextFieldClearButton)
                .addContainerGap())
        );

        refreshProjectButton.setText("Refresh Table");
        refreshProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshProjectButtonMouseClicked(evt);
            }
        });
        refreshProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshProjectButtonActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Projects", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        projectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project ID", "Project Leader", "Project Name", "Start Date", "End Date", "Duration", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        projectTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(projectTable);

        projectSearchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Project ID", "Project Name", "Project Still Processing", "Project Ended" }));

        searchProjectTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchProjectTextFieldActionPerformed(evt);
            }
        });

        projectSearchButton.setText("Search");
        projectSearchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectSearchButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(projectSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchProjectTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(projectSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchProjectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectSearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(296, 296, 296))
        );

        refreshButton4.setText("Return");
        refreshButton4.setActionCommand("C");
        refreshButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(refreshProjectButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton4)
                    .addComponent(refreshProjectButton)))
        );

        jTabbedPane1.addTab("Project Edit", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1184, 537));

        taskEditorPanel.setBackground(new java.awt.Color(255, 255, 255));
        taskEditorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Task Editor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        taskEditorPanel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Project");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Employee ID");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Task Description");

        projectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select Project" }));
        projectComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                projectComboBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        projectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectComboBoxActionPerformed(evt);
            }
        });

        addTaskButton.setText("Add");
        addTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTaskButtonMouseClicked(evt);
            }
        });
        addTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskButtonActionPerformed(evt);
            }
        });

        removeTaskButton.setText("Remove");
        removeTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeTaskButtonMouseClicked(evt);
            }
        });
        removeTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTaskButtonActionPerformed(evt);
            }
        });

        updateTaskButton.setText("Update");
        updateTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateTaskButtonMouseClicked(evt);
            }
        });
        updateTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTaskButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(taskDescriptionTextPane);

        employeeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeTextFieldActionPerformed(evt);
            }
        });

        refreshTaskTableButton.setText("Refresh Table");
        refreshTaskTableButton.setActionCommand("C");
        refreshTaskTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTaskTableButtonActionPerformed(evt);
            }
        });

        clearTaskTextFieldButton.setText("Clear Field");
        clearTaskTextFieldButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearTaskTextFieldButtonMouseClicked(evt);
            }
        });
        clearTaskTextFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTaskTextFieldButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout taskEditorPanelLayout = new javax.swing.GroupLayout(taskEditorPanel);
        taskEditorPanel.setLayout(taskEditorPanelLayout);
        taskEditorPanelLayout.setHorizontalGroup(
            taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskEditorPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(53, 53, 53)
                .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(refreshTaskTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(taskEditorPanelLayout.createSequentialGroup()
                            .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(removeTaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                .addComponent(addTaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(clearTaskTextFieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(employeeTextField)
                    .addComponent(jScrollPane1)
                    .addComponent(projectComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(92, 92, 92))
        );
        taskEditorPanelLayout.setVerticalGroup(
            taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskEditorPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(projectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(employeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taskEditorPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addTaskButton)
                            .addComponent(updateTaskButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(taskEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeTaskButton)
                            .addComponent(clearTaskTextFieldButton)))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshTaskTableButton)
                .addGap(84, 84, 84))
        );

        updateTaskButton.getAccessibleContext().setAccessibleName("update");

        departmentMemberPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Department Member Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        deptartmentMemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee No.", "Title", "First Name", "Last Name", "From Date", "To Date", "Gender", "Hire Date", "Current Job Count", "Total Job Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        deptartmentMemberTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deptartmentMemberTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(deptartmentMemberTable);

        deptMemberSearchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "Job Title", "Employee Name", "Employee ID", "Current Job Count ( <= )", "Current Job Count ( >= )", "Total Job Count ( <= )", "Total Job Count ( >= )" }));
        deptMemberSearchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptMemberSearchComboBoxActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout departmentMemberPanelLayout = new javax.swing.GroupLayout(departmentMemberPanel);
        departmentMemberPanel.setLayout(departmentMemberPanelLayout);
        departmentMemberPanelLayout.setHorizontalGroup(
            departmentMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(departmentMemberPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deptMemberSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane5)
        );
        departmentMemberPanelLayout.setVerticalGroup(
            departmentMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(departmentMemberPanelLayout.createSequentialGroup()
                .addGroup(departmentMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deptMemberSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
        );

        projectMembersPanel.setBackground(new java.awt.Color(255, 255, 255));
        projectMembersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Project Members", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        taskMembersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project ID", "Project Name", "Task ID", "Employee No.", "First Name", "Last Name", "Title", "Gender", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        taskMembersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taskMembersTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(taskMembersTable);

        javax.swing.GroupLayout projectMembersPanelLayout = new javax.swing.GroupLayout(projectMembersPanel);
        projectMembersPanel.setLayout(projectMembersPanelLayout);
        projectMembersPanelLayout.setHorizontalGroup(
            projectMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
        );
        projectMembersPanelLayout.setVerticalGroup(
            projectMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        returnButton2.setText("Return");
        returnButton2.setActionCommand("C");
        returnButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(departmentMemberPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(returnButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(taskEditorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(projectMembersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(taskEditorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectMembersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departmentMemberPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(returnButton2))
        );

        jTabbedPane1.addTab("Task Edit", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void projectNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectNameTextActionPerformed

    private void createProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createProjectButtonMouseClicked
 
    }//GEN-LAST:event_createProjectButtonMouseClicked

    private void refreshProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshProjectButtonMouseClicked
        refreshTable();
    }//GEN-LAST:event_refreshProjectButtonMouseClicked

    private void addTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTaskButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addTaskButtonMouseClicked

    private void updateTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateTaskButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_updateTaskButtonMouseClicked

    private void removeTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeTaskButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_removeTaskButtonMouseClicked

    private void createProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProjectButtonActionPerformed
       String projectName = projectNameText.getText();        
       Date startDate = projectStartDateChooser.getDate();    
       Date endDate = projectEndDateChooser.getDate();
       String description = projectDescriptionText.getText();
       String warningText ="Are you sure to create project? " + projectName + " Start at " + startDate;
       if(endDate!=null)warningText+=" End at " + endDate;       
             
       int dialogResult = JOptionPane.showConfirmDialog(null, warningText,"Warning",JOptionPane.YES_NO_OPTION);           
       if(dialogResult == JOptionPane.YES_OPTION){           
            boolean error = checkEditProjectPanelField(projectName, startDate, endDate);
                  
            if(!error){
                if(endDate==null){
                    projectDao.createProject(loginEmployee.getEmployee_no(),  projectName,  startDate,  description);
                }else{
                    projectDao.createProject(loginEmployee.getEmployee_no(), projectName, startDate, endDate, description);
                }
                //Refresh
                refreshTable();
                cleanEditProjectPanelField();
            }            
        }       
    }//GEN-LAST:event_createProjectButtonActionPerformed


    private void addTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskButtonActionPerformed
      String taskDescription=checkEditTaskPanelFieldDescription();
      Integer project_id=null;      
      boolean error=false;
      String warningText ="Are you sure to add task?";
      int dialogResult = JOptionPane.showConfirmDialog(null, warningText,"Warning",JOptionPane.YES_NO_OPTION);           
      if(dialogResult == JOptionPane.YES_OPTION){
          try {      
                //get project id
                if(projectComboBox.getSelectedIndex()>0){
                    project_id = getComboBoxProjectID(projectComboBox);
                }else{           
                    JOptionPane.showMessageDialog(this,"Before adding task please select the Project first");              
                    error=true;
                }                      
                //get emp_no                        
                Integer emp_no = Integer.parseInt(employeeTextField.getText());
                if(checkEditTaskPanelFieldEmployeeID(emp_no))error=true;        
                //Insert into db
                if(!error){                
                    projectDao.createTask(project_id, emp_no, taskDescription);
                    //Refresh Task Table
                    refreshTable();
                    cleanEditTaskPanelField();
                }                                    
           }catch(NumberFormatException e){
               JOptionPane.showMessageDialog(this,"Employee IDs are integer");
           }
      }      
    }//GEN-LAST:event_addTaskButtonActionPerformed

    private void updateTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTaskButtonActionPerformed
      Integer project_id=null;
      String taskDescription=checkEditTaskPanelFieldDescription();
      boolean error=false;
      String warningText ="Are you sure to update task?";
      int dialogResult = JOptionPane.showConfirmDialog(null, warningText,"Warning",JOptionPane.YES_NO_OPTION);           
      if(dialogResult == JOptionPane.YES_OPTION){
           try {
                //get task id
                if(selectedTaskID==null){
                    JOptionPane.showMessageDialog(this,"Before update task please select the task first"); 
                    error=true;
                }
                //get project id
                if(projectComboBox.getSelectedIndex()>0){
                    project_id = getComboBoxProjectID(projectComboBox);
                }else{           
                    JOptionPane.showMessageDialog(this,"Before adding task please select the Project first");              
                    error=true;
                }                                    
                // get emp_no                        
                Integer emp_no = Integer.parseInt(employeeTextField.getText());
                if(checkEditTaskPanelFieldEmployeeID(emp_no))error=true;         
                if(!error){                
                    projectDao.updateTask(selectedTaskID, project_id, emp_no, taskDescription);
                    //Refresh Task Table
                    refreshTable();
                    cleanEditTaskPanelField();
                    //Reset selected task ID to null
                    selectedTaskID = null;
                }                                 
           }catch(NumberFormatException e){
               JOptionPane.showMessageDialog(this,"Employee IDs are integer");
           }
        }
    }//GEN-LAST:event_updateTaskButtonActionPerformed

    private void removeTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTaskButtonActionPerformed
        boolean error=false;    
        String warningText = "Are you sure to delete task ID: "+ selectedTaskID;  
        int dialogResult = JOptionPane.showConfirmDialog(null, warningText,"Warning",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            if(selectedTaskID==null){
                JOptionPane.showMessageDialog(this,"Before delete task please select the task first"); 
                error=true;
            }        
            if(!error){
                projectDao.deleteTask(selectedTaskID);
                //refresh Table
                refreshTable();
                cleanEditTaskPanelField();
                cleanEditProjectPanelField();
                selectedTaskID = null;//Reset selectedTaskID
            }            
        }        
    }//GEN-LAST:event_removeTaskButtonActionPerformed

    private void refreshTaskTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTaskTableButtonActionPerformed
        refreshTable();      
    }//GEN-LAST:event_refreshTaskTableButtonActionPerformed

    private void projectTextFieldClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectTextFieldClearButtonActionPerformed
        cleanEditTaskPanelField();
        cleanEditProjectPanelField(); 
    }//GEN-LAST:event_projectTextFieldClearButtonActionPerformed

    private void projectTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectTableMouseClicked
       try{
            DefaultTableModel model = (DefaultTableModel) projectTable.getModel();
            int selectedIndex = projectTable.getSelectedRow();
                    
            projectNameText.setText(model.getValueAt(selectedIndex, 2).toString());        
            projectStartDateChooser.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(selectedIndex, 3).toString()));
            
            if(model.getValueAt(selectedIndex, 4)!=null) {           
                projectEndDateChooser.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(selectedIndex, 4).toString()));           
            }else{
                projectEndDateChooser.setDate(null);
            }
            
            if(model.getValueAt(selectedIndex, 6)!=null){
                projectDescriptionText.setText(model.getValueAt(selectedIndex, 6).toString());
            }else{
                projectDescriptionText.setText("");
            }
        }catch(ParseException e){}      
    }//GEN-LAST:event_projectTableMouseClicked

    private void deleteProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteProjectButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteProjectButtonMouseClicked

    private void deleteProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProjectButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) projectTable.getModel();
        int selectedProjectIndex = projectTable.getSelectedRow();

        if(selectedProjectIndex>-1){
            String project_name = model.getValueAt(selectedProjectIndex, 2).toString(); 
            Integer project_id = Integer.parseInt(model.getValueAt(selectedProjectIndex, 0).toString());        
            String warningText = "Are you sure to delete " + " ID " + project_id+ " Name " + project_name + " ?";  

            int dialogResult = JOptionPane.showConfirmDialog(null, warningText,"Warning",JOptionPane.YES_NO_OPTION);

            if(dialogResult == JOptionPane.YES_OPTION){
                 projectDao.deleteProject(project_id);
                 //Refresh Table
                 refreshTable();                
                 cleanEditProjectPanelField();
            }                           
        }else{
            JOptionPane.showMessageDialog(this,"Before delete please select the Project that you want to edit first");
        }
    }//GEN-LAST:event_deleteProjectButtonActionPerformed

    private void editProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editProjectButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_editProjectButtonMouseClicked

    private void editProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProjectButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) projectTable.getModel();
        int selectedProjectIndex = projectTable.getSelectedRow();
        if(selectedProjectIndex>-1){ // Selected
            Integer project_id = Integer.parseInt(model.getValueAt(selectedProjectIndex, 0).toString());
            String projectName = projectNameText.getText();        
            Date startDate = projectStartDateChooser.getDate();                
            Date endDate = projectEndDateChooser.getDate();
            String description = projectDescriptionText.getText();            

            String warningText = "Are you sure to update project? Project ID "+ project_id;
            int dialogResult = JOptionPane.showConfirmDialog(null, warningText,"Warning",JOptionPane.YES_NO_OPTION);          

            if(dialogResult == JOptionPane.YES_OPTION){
                boolean error = checkEditProjectPanelField(projectName, startDate, endDate);
                //if(description.equals(""))description=null;
                if(!error){
                    if(endDate==null){
                        projectDao.updateProject(project_id, loginEmployee.getEmployee_no(), projectName, startDate, description);
                    }else {
                        projectDao.updateProject(project_id,  loginEmployee.getEmployee_no(),  projectName,  startDate,  endDate,  description);
                    }
                    //Refresh Table
                    refreshTable();                
                    cleanEditProjectPanelField();
                }                                            
            }  
        }else{ // didnt select
            JOptionPane.showMessageDialog(this,"Before edit please select the Project that you want to edit first");
        }        
    }//GEN-LAST:event_editProjectButtonActionPerformed

    private void refreshProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshProjectButtonActionPerformed
        refreshTable();
    }//GEN-LAST:event_refreshProjectButtonActionPerformed

    private void employeeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeTextFieldActionPerformed

    private void deptartmentMemberTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptartmentMemberTableMouseClicked
       refreshTaskTable();       
       DefaultTableModel model = (DefaultTableModel) deptartmentMemberTable.getModel();    
       int selectedIndex = deptartmentMemberTable.getSelectedRow();       
       //refresh
       projectComboBox.setSelectedIndex(0);
       taskDescriptionTextPane.setText("");     
       employeeTextField.setText(model.getValueAt(selectedIndex, 0).toString());        
    }//GEN-LAST:event_deptartmentMemberTableMouseClicked

    private void taskMembersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taskMembersTableMouseClicked
       DefaultTableModel model = (DefaultTableModel) taskMembersTable.getModel();
       int selectedIndex = taskMembersTable.getSelectedRow();
       selectedTaskID = Integer.parseInt(model.getValueAt(selectedIndex, 2).toString());       
       //Employee Field update     
       employeeTextField.setText(model.getValueAt(selectedIndex, 3).toString());
       Integer selectedProjectId = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
       //Description Field update
       if(model.getValueAt(selectedIndex, 8)!=null){
            taskDescriptionTextPane.setText(model.getValueAt(selectedIndex, 8).toString());
       }else{
           taskDescriptionTextPane.setText("");
       }
       //ComboBox update                        
       for(int i=1 ; i<projectComboBox.getItemCount();i++){
            //Trans type from table
            Integer space = projectComboBox.getItemAt(i).indexOf(" ");
            Integer comma = projectComboBox.getItemAt(i).indexOf(",");        
            Integer project_id = Integer.parseInt(projectComboBox.getItemAt(i).substring(space+1, comma));           
            //display selected item on comboBox
            if(Objects.equals(selectedProjectId, project_id)){
                projectComboBox.setSelectedIndex(i);
            }
       }
    }//GEN-LAST:event_taskMembersTableMouseClicked

    private void projectComboBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_projectComboBoxPopupMenuWillBecomeInvisible
         if(projectComboBox.getSelectedIndex()>0){
            //Tasks by project ID
            Integer project_id = getComboBoxProjectID(projectComboBox);               
            cleanTableModel(taskMembersTable);
            taskMembersTable.setModel(getProjectMemberTableModel(projectDao.projectMemberList(loginEmployee.getEmployee_no(), project_id)));
         }else{
            // All Tasks
            refreshTaskTable();
         }
    }//GEN-LAST:event_projectComboBoxPopupMenuWillBecomeInvisible

    private void projectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectComboBoxActionPerformed
        
    }//GEN-LAST:event_projectComboBoxActionPerformed

    private void returnButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButton2ActionPerformed
        ps.showJPanel(MANAGER_MAIN);        
    }//GEN-LAST:event_returnButton2ActionPerformed

    private void refreshButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButton4ActionPerformed
        ps.showJPanel(MANAGER_MAIN);       
    }//GEN-LAST:event_refreshButton4ActionPerformed

    private void clearTaskTextFieldButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearTaskTextFieldButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_clearTaskTextFieldButtonMouseClicked

    private void clearTaskTextFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTaskTextFieldButtonActionPerformed
        refreshTable();
        cleanEditTaskPanelField();
        cleanEditProjectPanelField();       
    }//GEN-LAST:event_clearTaskTextFieldButtonActionPerformed

    private void deptMemberSearchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptMemberSearchComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptMemberSearchComboBoxActionPerformed

    private void searchProjectTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchProjectTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchProjectTextFieldActionPerformed

    private void projectSearchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectSearchButtonMouseClicked
        searchProjects();
    }//GEN-LAST:event_projectSearchButtonMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        departmentMembersSearch();
    }//GEN-LAST:event_searchButtonActionPerformed


    
    private void refreshTable(){
        refreshProjectTable();
        refreshTaskTable();
        refreshDeptMemberTable();
        cleanComboBox(projectComboBox); 
        updateProjectComboBox();
    }
            
    
    private void refreshProjectTable(){        
        //cleanTableModel(projectTable);
        projectTable.setModel(getProjectTableModel(projectDao.projectListByProjectLeader(loginEmployee.getEmployee_no(), SearchSelection.ALL, null)));
    }
    
    private void refreshTaskTable(){      
        //cleanTableModel(taskMembersTable);
        taskMembersTable.setModel(getProjectMemberTableModel(projectDao.projectMemberList(loginEmployee.getEmployee_no())));
    }
    
    private void refreshDeptMemberTable(){        
        //cleanTableModel(deptartmentMemberTable);
        deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.ALL, null)));
    }
 
    private void cleanEditProjectPanelField(){
        hideProjectPanelLabel();
        //Refresh TextField
        projectNameText.setText("");
        projectStartDateChooser.setDate(new Date());
        projectEndDateChooser.setDate(null);
        projectDescriptionText.setText(""); 
    }
    
    private void cleanEditTaskPanelField(){
        projectComboBox.setSelectedIndex(0);
        employeeTextField.setText("");
        taskDescriptionTextPane.setText("");
    }
    
    private void hideProjectPanelLabel(){
         warningLabel1.setVisible(false);
         warningLabel2.setVisible(false);
         warningLabel3.setVisible(false);
     }
    
     //private void cleanComboBox(){
       //  for(int i=projectComboBox.getItemCount()-1;i>0;i--){
         //   projectComboBox.removeItemAt(i);
        //}
    // } 
    
     private void updateProjectComboBox(){
        for(Project p : projectDao.projectListByProjectLeader(loginEmployee.getEmployee_no(), SearchSelection.PROJECT_STILL_PROCESSING, null)){
            projectComboBox.addItem("ID: "+p.getProject_id() + ", Name: " +p.getProject_name());
        }
    }
    
     private Integer getComboBoxProjectID(JComboBox comboBox){
            Integer space = comboBox.getSelectedItem().toString().indexOf(" ");
            Integer comma = comboBox.getSelectedItem().toString().indexOf(",");        
            return Integer.parseInt(comboBox.getSelectedItem().toString().substring(space+1, comma));               
      }
     
     private boolean checkEditProjectPanelField(String projectName, Date startDate, Date endDate){
         boolean error = false;
         //Project Name field null check 
           if(projectName.equals("")){
                warningLabel1.setVisible(true);
                warningLabel1.setText("Project name cannot be empty");
                error=true;
            }
           //Start Date field null check
            if(startDate==null){
                warningLabel2.setVisible(true);
                warningLabel2.setText("Start Date cannot be empty");
                error=true;
            }            
            //End Date check before start date
            if(endDate!=null && endDate.before(startDate)){
                warningLabel3.setVisible(true);
                warningLabel3.setText("End date can not before start date");
                error=true;
            }            
            return error;
     }     
     
     private String checkEditTaskPanelFieldDescription(){
         String description=taskDescriptionTextPane.getText();
         if(description==null)description="";
         return description;          
     }
     
     private boolean checkEditTaskPanelFieldEmployeeID(Integer emp_no){
         boolean error=false;
         boolean checkEmployeeIdExisit=employeeDao.checkEmployeeID(emp_no, loginEmployee.getDepartment_no());
         if(!checkEmployeeIdExisit){
            JOptionPane.showMessageDialog(this,"Can not find Employee ID "+emp_no+" in Department: "+ loginEmployee.getDepartment_no().toUpperCase()+", "+ loginEmployee.getDeparment_name()); 
            error=true;
         }
         return error;
     }
     
     private void searchProjects(){
         String searchValue = searchProjectTextField.getText();
         System.out.println("Searching: "+ searchValue);
         //cleanTableModel(projectTable);
         switch(projectSearchComboBox.getSelectedIndex()){            
            case 0: //All
                refreshProjectTable();
                System.out.println("Refeshed Project Table");
                break;
            case 1://search by project id                  
                projectTable.setModel(getProjectTableModel(projectDao.projectListByProjectLeader(loginEmployee.getEmployee_no(), SearchSelection.PROJECT_ID, searchValue)));       
                break;
            case 2://search by project name
                projectTable.setModel(getProjectTableModel(projectDao.projectListByProjectLeader(loginEmployee.getEmployee_no(), SearchSelection.PROJECT_NAME, searchValue)));
                break;
            case 3: // Still processing project
                projectTable.setModel(getProjectTableModel(projectDao.projectListByProjectLeader(loginEmployee.getEmployee_no(), SearchSelection.PROJECT_STILL_PROCESSING, null)));
                break;
            case 4: // Ended project
                projectTable.setModel(getProjectTableModel(projectDao.projectListByProjectLeader(loginEmployee.getEmployee_no(), SearchSelection.PROJECT_ENDED, null)));
                break;
            default: break;              
        }       
    }
      
     
     private void departmentMembersSearch(){
         String inputValue=searchDepartmentTextField.getText();
         System.out.println("Searching: " + inputValue);
         //cleanTableModel(deptartmentMemberTable);
                 //getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSeletion.ALL, null), deptartmentMemberTable);
                 //        
         switch(deptMemberSearchComboBox.getSelectedIndex()){
             case 0: //All
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.ALL, null)));
                 break;
             case 1: // Job Title
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.JOB_TITLE, inputValue)));
                 break;
             case 2: // Emp Name
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.EMPLOYEE_FULL_NAME, inputValue)));
                 break;
             case 3:// Emp ID
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.EMPLOYEE_NUMBER, inputValue)));
                 break;
             case 4:// Current Job Less and equal
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.CURRENT_PARTAKE_JOB_LESS_AND_EQUAL, inputValue)));
                 break;
             case 5: // Current Job Greater and equal
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.CURRENT_PARTAKE_JOB_GREATER_AND_EQUAL, inputValue)));
                 break;             
             case 6: //Total Job less and equal
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.TOTAL_PARTAKE_JOB_LESS_AND_EQUAL, inputValue)));
                 break;
             case 7://Total Job Greater and equal
                 deptartmentMemberTable.setModel(getDepartmentMemberTableModel(departmentDao.departmentMembersList(loginEmployee.getDepartment_no(),SearchSelection.TOTAL_PARTAKE_JOB_GREATER_AND_EQUAL, inputValue)));
                 break;
             default:
                 System.out.println("What are you searching");           
                 break;
         }
     }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTaskButton;
    private javax.swing.JButton clearTaskTextFieldButton;
    private javax.swing.JButton createProjectButton;
    private javax.swing.JButton deleteProjectButton;
    private javax.swing.JPanel departmentMemberPanel;
    private javax.swing.JComboBox<String> deptMemberSearchComboBox;
    private javax.swing.JTable deptartmentMemberTable;
    private javax.swing.JButton editProjectButton;
    private javax.swing.JTextField employeeTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> projectComboBox;
    private javax.swing.JTextPane projectDescriptionText;
    private com.toedter.calendar.JDateChooser projectEndDateChooser;
    private javax.swing.JPanel projectMembersPanel;
    private javax.swing.JTextField projectNameText;
    private javax.swing.JButton projectSearchButton;
    private javax.swing.JComboBox<String> projectSearchComboBox;
    private com.toedter.calendar.JDateChooser projectStartDateChooser;
    private javax.swing.JTable projectTable;
    private javax.swing.JButton projectTextFieldClearButton;
    private javax.swing.JButton refreshButton4;
    private javax.swing.JButton refreshProjectButton;
    private javax.swing.JButton refreshTaskTableButton;
    private javax.swing.JButton removeTaskButton;
    private javax.swing.JButton returnButton2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchDepartmentTextField;
    private javax.swing.JTextField searchProjectTextField;
    private javax.swing.JTextPane taskDescriptionTextPane;
    private javax.swing.JPanel taskEditorPanel;
    private javax.swing.JTable taskMembersTable;
    private javax.swing.JButton updateTaskButton;
    private javax.swing.JLabel warningLabel1;
    private javax.swing.JLabel warningLabel2;
    private javax.swing.JLabel warningLabel3;
    // End of variables declaration//GEN-END:variables




}
